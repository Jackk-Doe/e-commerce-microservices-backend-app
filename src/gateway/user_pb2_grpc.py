# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import user_pb2 as user__pb2


class UserStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LogIn = channel.unary_unary(
                '/user.User/LogIn',
                request_serializer=user__pb2.UserLogInForm.SerializeToString,
                response_deserializer=user__pb2.UserDTO.FromString,
                )
        self.SignUp = channel.unary_unary(
                '/user.User/SignUp',
                request_serializer=user__pb2.UserSignUpForm.SerializeToString,
                response_deserializer=user__pb2.UserDTO.FromString,
                )
        self.GetMe = channel.unary_unary(
                '/user.User/GetMe',
                request_serializer=user__pb2.Token.SerializeToString,
                response_deserializer=user__pb2.UserDTO.FromString,
                )
        self.GetId = channel.unary_unary(
                '/user.User/GetId',
                request_serializer=user__pb2.Token.SerializeToString,
                response_deserializer=user__pb2.Id.FromString,
                )
        self.InternalGetUserViaToken = channel.unary_unary(
                '/user.User/InternalGetUserViaToken',
                request_serializer=user__pb2.Token.SerializeToString,
                response_deserializer=user__pb2.InternalUserDTO.FromString,
                )
        self.InternalGetUserViaId = channel.unary_unary(
                '/user.User/InternalGetUserViaId',
                request_serializer=user__pb2.Id.SerializeToString,
                response_deserializer=user__pb2.InternalUserDTO.FromString,
                )


class UserServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LogIn(self, request, context):
        """
        CLIENT ACCESSIBLE Services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetId(self, request, context):
        """
        MICROSERVICES INTERNAL ONLY Services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InternalGetUserViaToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InternalGetUserViaId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LogIn': grpc.unary_unary_rpc_method_handler(
                    servicer.LogIn,
                    request_deserializer=user__pb2.UserLogInForm.FromString,
                    response_serializer=user__pb2.UserDTO.SerializeToString,
            ),
            'SignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUp,
                    request_deserializer=user__pb2.UserSignUpForm.FromString,
                    response_serializer=user__pb2.UserDTO.SerializeToString,
            ),
            'GetMe': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMe,
                    request_deserializer=user__pb2.Token.FromString,
                    response_serializer=user__pb2.UserDTO.SerializeToString,
            ),
            'GetId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetId,
                    request_deserializer=user__pb2.Token.FromString,
                    response_serializer=user__pb2.Id.SerializeToString,
            ),
            'InternalGetUserViaToken': grpc.unary_unary_rpc_method_handler(
                    servicer.InternalGetUserViaToken,
                    request_deserializer=user__pb2.Token.FromString,
                    response_serializer=user__pb2.InternalUserDTO.SerializeToString,
            ),
            'InternalGetUserViaId': grpc.unary_unary_rpc_method_handler(
                    servicer.InternalGetUserViaId,
                    request_deserializer=user__pb2.Id.FromString,
                    response_serializer=user__pb2.InternalUserDTO.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LogIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/LogIn',
            user__pb2.UserLogInForm.SerializeToString,
            user__pb2.UserDTO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/SignUp',
            user__pb2.UserSignUpForm.SerializeToString,
            user__pb2.UserDTO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/GetMe',
            user__pb2.Token.SerializeToString,
            user__pb2.UserDTO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/GetId',
            user__pb2.Token.SerializeToString,
            user__pb2.Id.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InternalGetUserViaToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/InternalGetUserViaToken',
            user__pb2.Token.SerializeToString,
            user__pb2.InternalUserDTO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InternalGetUserViaId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/InternalGetUserViaId',
            user__pb2.Id.SerializeToString,
            user__pb2.InternalUserDTO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
